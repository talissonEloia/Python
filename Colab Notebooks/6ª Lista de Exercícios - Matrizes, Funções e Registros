{"cells":[{"cell_type":"markdown","metadata":{"id":"mtzHpEkMd7za"},"source":["1) Escrever um programa que recebe duas matrizes A e B e calcula a subtração de duas matrizes e mostra na tela. Criar uma função para preencher a matriz (preencher_matriz) e uma função para calcular a subtração (subtrair_matriz)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SNvSosiezjfR"},"outputs":[],"source":["#####~FUNÇÕES~#####\n","def imprimir_matriz(matriz):\n","    for i in range(len(matriz)):\n","        for j in range(len(matriz[0])):\n","            print(matriz[i][j],end = \" \")\n","        print('')\n","        \n","def fill_matriz():\n","  n = int(input('Quantidade de linhas: '))\n","  m = int(input('Quantidade de colunas: '))\n","  matriz_principal = []\n","\n","  for i in range(n):\n","    linha = []\n","    for j in range(m):\n","      linha.append(int(input('Digite o valor da linha [%d] e da coluna [%d]'%(i,j))))\n","    matriz_principal.append(linha)\n","  imprimir_matriz(matriz_principal)\n","  return (matriz_principal)\n","\n","def sub_matriz(matriz_a, matriz_b):\n","  sub_matriz = []\n","  for i in range(len(matriz_a)):\n","    for j in range(len(matriz_a[0])):\n","      sub_matriz.append(int(matriz_a[i][j] - matriz_b[i][j]))\n","  return(sub_matriz)\n","\n","#### INSTRUÇÕES ####\n","\n","mat_a = fill_matriz()\n","mat_b = fill_matriz()\n","mat_res = []\n","\n","if len(mat_a) == len(mat_b) and len(mat_a[0]) == len(mat_b[0]):\n","  mat_res = sub_matriz(mat_a,mat_b)\n","  print(mat_res)\n","else:\n","  print('Matrizes incompatíveis.')\n"]},{"cell_type":"markdown","metadata":{"id":"wrUZxOSgz-zi"},"source":[".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n",".\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jxe1FED3FhKT"},"outputs":[],"source":["# -*- coding: utf-8 -*-\n","\"\"\"\n","Created on Wed Nov 30 09:24:11 2022\n","\n","@author: Lenovo\n","\"\"\"\n","\n","#primeira questão  - Lista 6\n","\n","def escrever_mat():\n","  for linha in m:\n","      for val in linha:\n","          print '{:4}'.format(val)\n","\n","def preencher_matriz():\n","  n = int(input('Quantidade de linhas: '))\n","  m = int(input('Quantidade de colunas: '))\n","  matriz = []\n","\n","  for i in range(n): #percorre linhas de A\n","    linha = []  #preencher linha de a\n","    for j in range(m): #percorre as colunas de A\n","      linha.append(int(input('Digite o valor da linha [%d] e colula [%d] da matriz A:' %(i,j)))) #recebe valores das linhas de a                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ) \n","\n","    matriz.append(linha) #aloca o valor \n","  print('matriz %d '%(i+1))\n","  print(matriz)\n","  return matriz\n","\n","def sub_matriz(mat_a, mat_b):\n","  matriz_sub = []\n","  for i in range(len(mat_a)): #percorre linhas de a e b\n","    for j in range(len(mat_a[0])): #percorre as colunas de a e b\n","      matriz_sub.append(mat_a[i][j] - mat_b[i][j])\n","\n","  return(matriz_sub)\n","\n","\n","\n","#Inicio do programa      \n","\n","matriz_a = preencher_matriz()\n","matriz_b = preencher_matriz()\n","\n","if len(matriz_a) == len(matriz_b) and len(matriz_a[0]) == len(matriz_b[0]):\n","  matriz_res = sub_matriz(matriz_a,matriz_b)\n","  print('Matriz resposta',matriz_res)\n","else:\n","  print('As a2mostras devem ter a mesma ordem.')"]},{"cell_type":"markdown","metadata":{"id":"lP4IwnE_eD6n"},"source":["2) Escreve um programa que recebe 2 matrizes (M e N) de números inteiros e\n","verifica se ambas são inversas. \n","\n","Obs. A matriz inversa ocorre quando o produto de duas matrizes resulta numa matriz identidade de mesma ordem."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fdMy15OFfAzT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670204346935,"user_tz":180,"elapsed":8469,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"2884738b-5a04-472b-ec8d-55eba2874713"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a quantidade de linhas: 2\n","Digite a quantidade de colunas: 2\n","Digite o valor da linha 0 e da coluna 01\n","Digite o valor da linha 0 e da coluna 12\n","Digite o valor da linha 1 e da coluna 03\n","Digite o valor da linha 1 e da coluna 14\n","[[1, 2], [3, 4]]\n"]}],"source":["def fill_mat():\n","  n = int(input('Digite a quantidade de linhas: '))\n","  m = int(input('Digite a quantidade de colunas: '))\n","  matriz = []\n","  for i in range(n):\n","    linha = []\n","    for j in range(m):\n","      linha.append(int(input('Digite o valor da linha %d e da coluna %d: '%(i,j))))\n","    matriz.append(linha)\n","  print(matriz)\n","  return(matriz)\n","\n","\n","\n","#####code#####\n","\n","mat_a = fill_mat()\n","mat_b = fill_mat()\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"YY_XtZuYeImX"},"source":["3) Preencher uma matriz 2x2 com números de entrada do usuário e calcular a média dos elementos dessa matriz."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tXAAJR2IfBZf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670205663081,"user_tz":180,"elapsed":11815,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"0df1dbdd-d875-41f3-bd2d-68da3246fbd2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a quantidade de linhas: 3\n","Digite a quantidade de colunas: 3\n","Digite o valor da linha 0 e da coluna 0: 1\n","Digite o valor da linha 0 e da coluna 1: 2\n","Digite o valor da linha 0 e da coluna 2: 3\n","Digite o valor da linha 1 e da coluna 0: 1\n","Digite o valor da linha 1 e da coluna 1: 2\n","Digite o valor da linha 1 e da coluna 2: 3\n","Digite o valor da linha 2 e da coluna 0: 3\n","Digite o valor da linha 2 e da coluna 1: 2\n","Digite o valor da linha 2 e da coluna 2: 1\n","Média: 2.00\n","matriz:  [[1, 2, 3], [1, 2, 3], [3, 2, 1]]\n","soma:  18\n","elementos:  9\n"]}],"source":["cont = 0\n","soma = 0\n","n = int(input('Digite a quantidade de linhas: '))\n","m = int(input('Digite a quantidade de colunas: '))\n","matriz = []\n","for i in range(n):\n","  linha = []\n","  for j in range(m):\n","    linha.append(int(input('Digite o valor da linha %d e da coluna %d: '%(i,j))))\n","  matriz.append(linha)\n","\n","for i in range(len(matriz)):\n","  for j in range(len(matriz[0])):\n","    soma = soma + matriz[i][j]\n","    cont = cont+1\n","    \n","print('Média: %.2f'%(soma/cont))\n","print('matriz: ',matriz)\n","print('soma: ',soma)\n","print('elementos: ',cont)\n"]},{"cell_type":"markdown","metadata":{"id":"GYL_Jq9oeMne"},"source":["4) Escreva um programa que leia uma matriz 6x3 com números reais, calcule\n","e mostre:\n","\n","    a) o maior elemento da matriz e sua respectiva posição (linha e coluna);\n","\n","    b) o menor elemento da matriz e sua respectiva posição."]},{"cell_type":"code","execution_count":4,"metadata":{"id":"8YL4A_TFfCw4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671013579643,"user_tz":180,"elapsed":5611,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"ea43e0e8-d791-4b46-c95c-9c416be9a739"},"outputs":[{"output_type":"stream","name":"stdout","text":["Linha [0] Coluna [0]: 1\n","Linha [0] Coluna [1]: 2\n","Linha [1] Coluna [0]: 3\n","Linha [1] Coluna [1]: 4\n","[[1.0, 2.0], [3.0, 4.0]]\n","maior:  4.0\n","posição [1, 1]: 4.00 \n","maior:  0\n","posição [0, 0]: 0.00 \n"]}],"source":["n = 2 #int(input('Linhas: '))\n","m = 2 #int(input('Colunas: '))\n","matriz = []\n","aux = 0\n","aux2 = 10\n","lin = 0\n","col = 0\n","lin2 = 0\n","col2 = 0\n","for i in range(n):\n","  linha = []\n","  for j in range(m):\n","    linha.append(float(input('Linha [%d] Coluna [%d]: '%(i,j))))\n","  matriz.append(linha)\n","print(matriz)\n","\n","\n","for i in range(len(matriz)):\n","  for j in range(len(matriz[0])):\n","    if matriz[i][j] > aux:\n","      lin = i\n","      col = j\n","      aux = matriz[i][j]\n","    else:\n","      lin2 = i\n","      col2 = j\n","      aux2 = matriz[i][j]\n","\n","\n","      \n","print('maior: ', aux)\n","print('posição [%d, %d]: %.2f '%(lin,col,aux))\n","\n","print('menor: ', aux2)\n","print('posição [%d, %d]: %.2f '%(lin2,col2,aux2))\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"DzBO_nBmeQ4P"},"source":["5) Faça um programa que preencha uma matriz 6 × 3 com as notas de seis alunos em três provas. \n","\n","O programa deverá mostrar um relatório com o número dos alunos (número da linha) e a prova em que cada aluno obteve menor nota. \n","\n","Ao final do relatório, deverá mostrar quantos alunos tiveram menor nota em cada uma das provas: na prova 1, na prova 2 e na prova 3."]},{"cell_type":"code","execution_count":5,"metadata":{"id":"FZo3Gb5pfDRX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671013916959,"user_tz":180,"elapsed":9899,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"057cb3b5-0819-4415-a423-6fa19812c8e7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Alunos: 3\n","Notas: 1\n","Aluno 1 nota 1: 2\n","Aluno 2 nota 1: 3\n","Aluno 3 nota 1: 4\n","\n"," ####################  Menor Nota  ####################\n","Aluno 1:  2.0\n","Aluno 2:  3.0\n","Aluno 3:  4.0\n","####################  Prova com menor nota  ####################\n","Aluno 1:  1\n","Aluno 2:  1\n","Aluno 3:  1\n","####################  Quantidade de alunos com menor nota na por AP  ####################\n","AP 1:  3\n","AP 2:  0\n","AP 3:  0\n"]}],"source":["def mat():\n","  n = int(input('Alunos: '))\n","  m = int(input('Notas: '))\n","  matriz = []\n","\n","  for i in range(n):\n","    linha = []\n","    for j in range(m):\n","      linha.append(float(input('Aluno %d nota %d: '%(i+1,j+1))))\n","    matriz.append(linha)\n","  return matriz\n","\n","\n","\n","def menor_nota(matriz):\n","  \n","  aluno = []\n","  for i in range(len(matriz)):\n","    aux = 10\n","    for j in range(len(matriz[0])):\n","      if matriz[i][j] < aux: \n","        aux = matriz[i][j]\n","    aluno.append(aux)\n","  return (aluno)\n","\n","def pos_menor(matriz):\n","  ap = []\n","  for i in range(len(matriz)):\n","    aux = 10\n","    for j in range(len(matriz[0])):\n","      if matriz[i][j] < aux: \n","        aux = matriz[i][j]\n","        col = j\n","    ap.append(col)\n","  return (ap)\n","\n","\n","\n","\n","#code4\n","a = mat()\n","menor = menor_nota(a)\n","pos = pos_menor(a)\n","\n","print('\\n','#'*20, ' Menor Nota ','#'*20)\n","\n","for i in range(len(menor)):\n","  print('Aluno %d: '%(i+1),menor[i])\n","\n","print('#'*20, ' Prova com menor nota ','#'*20)\n","\n","for i in range(len(pos)):\n","  print('Aluno %d: '%(i+1),(pos[i]+1))\n","\n","print('#'*20, ' Quantidade de alunos com menor nota na por AP ','#'*20)\n","for i in range(len(pos)):\n","  print('AP %d: '%(i+1),pos.count(i))\n","#print('AP1: ',pos.count(0))\n","#print('AP2: ',pos.count(1))"]},{"cell_type":"markdown","metadata":{"id":"b-9kpeR7eW2S"},"source":["6) Os alunos da disciplina de Programação Computacional para Engenharia\n","da UFC começaram a trabalhar com matrizes. Eles estão fazendo um\n","algoritmo para descobrir a linha da matriz de maior. Sendo que o valor de\n","uma linha é calculado pela soma dos quadrados dos seus elementos. Faça\n","um algoritmo que:\n","\n","    a) Receba a ordem de uma matriz (nxm) e preencha essa matriz com\n","    dados de entrada fornecidos pelo usuário;\n","\n","    b) Calcule e retorne a linha de maior valor;\n","\n","Obs. Manipular os dados obrigatoriamente usando matriz e pode utilizar os métodos de listas e strings.\n","\n","  Entrada:\n","    A ordem da matriz: n quantidade de linhas e m quantidade de colunas\n","    Os elementos da matriz (números inteiros)\n","\n","  Saída:\n","    A linha de maior valor\n","\n","EXEMPLO: Na matriz 2x2 abaixo: [[a1, a2], [a3, a4]] O valor da linha 0 é alculado por a1^2 + a2^2 E assim sucessivamente. \n","\n","Para a matriz 2x2: [[2, 4], [3, 5]] O valor da linha 0 (soma = 2^2 + 4^2) é 25 e o valor da linha 1 é 34 (soma = 3^2 + 5^2). \n","\n","Dessa forma, a linha 1 é a linha de maior valor."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YzUcZZYXfSXw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670214404023,"user_tz":180,"elapsed":9914,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"d3ff58ff-5c02-4a68-e76f-d323ff35a471"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a quantidade de linhas: 3\n","Digite a quantidade de colunas: 2\n","Digite o valor da linha 0 e da coluna 0: 3\n","Digite o valor da linha 0 e da coluna 1: 3\n","Digite o valor da linha 1 e da coluna 0: 1\n","Digite o valor da linha 1 e da coluna 1: 1\n","Digite o valor da linha 2 e da coluna 0: 1\n","Digite o valor da linha 2 e da coluna 1: 2\n","[[3, 3], [1, 1], [1, 2]]\n","Valor das linhas [18, 2, 5]\n","Maior linha é:  1\n"]}],"source":["def fill_mat():\n","  n = int(input('Digite a quantidade de linhas: '))\n","  m = int(input('Digite a quantidade de colunas: '))\n","  matriz = []\n","  for i in range(n):\n","    linha = []\n","    for j in range(m):\n","      linha.append(int(input('Digite o valor da linha %d e da coluna %d: '%(i,j))))\n","    matriz.append(linha)\n","  print(matriz)\n","  return(matriz)\n","\n","\n","\n","#code\n","\n","a = fill_mat()\n","\n","linha = []\n","\n","for i in range(len(a)):\n","  cont = 0\n","  for j in range(len(a[0])):\n","    cont = ((a[i][j])**2)+cont\n","  linha.append(cont)\n","print('Valor das linhas',linha)\n","\n","vr = 0\n","tamanho = 0\n","for i in range(len(linha)):\n","  if linha[i] > tamanho:\n","    tamanho = linha[i]\n","    vr = i\n","print('Maior linha é a linha: ',vr+1)"]},{"cell_type":"markdown","metadata":{"id":"aH6Myx2te0gQ"},"source":["7) Faça uma função que preencha as duas listas com dados fornecidos pelo usuário. Após isso faça outra função que receba as duas listas como parâmetros e forma uma terceira lista da seguinte forma: o elemento na posição i da terceira lista é a soma do elemento na posição i da primeira lista mais o elemento na posição i da segunda lista. Seu programa deve imprimir a terceira lista."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aQurs1f0fSz4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670215560956,"user_tz":180,"elapsed":12775,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"fa8199f8-649a-41a6-c58c-a0a93b2e1d21"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tamanho da lista: 3\n","Elemento 0 da lista: 1\n","Elemento 1 da lista: 2\n","Elemento 2 da lista: 3\n","Tamanho da lista: 3\n","Elemento 0 da lista: 3\n","Elemento 1 da lista: 2\n","Elemento 2 da lista: 1\n","Lista 3:  [4, 4, 4]\n"]}],"source":["def fill_linha():\n","  n = int(input('Tamanho da lista: '))\n","  linha = []\n","  for i in range(n):\n","    linha.append(int(input('Elemento %d da lista: '%i)))\n","  return(linha)\n","\n","\n","def new_lista(linha_1,linha_2):\n","  linha_3 = []\n","  for i in range(len(linha_1)):\n","    linha_3.append(linha_1[i]+linha_2[i])\n","  return linha_3\n","  \n","\n","linha_1 = fill_linha()\n","linha_2 = fill_linha()\n","lista_3 = new_lista(linha_1,linha_2)\n","print('Lista 3: ',lista_3)\n","\n","#print(linha_1)\n","#print(linha_2)\n"]},{"cell_type":"markdown","metadata":{"id":"IkYlkqhte1ln"},"source":["8) Faça uma função que recebe uma frase e retorna o número de palavras que a frase contém. Considere que a palavra pode começar e/ou terminar por espaços. A entrada e saída de dados devem ser feitas no programa principal."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"icEdiiwpfTMx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670216102678,"user_tz":180,"elapsed":5322,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"66e4060d-4202-4be4-c4ac-3c31591c8fb2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite uma frase: Talisson ELoia Barvosa\n","A frase tem 3 palavras\n"]}],"source":["\n","def conta_palavras(frase):\n","  palavras = frase.split(' ')\n","  return(len(palavras))\n","\n","frase = input('Digite uma frase: ')\n","n = conta_palavras(frase)\n","print('A frase tem %d palavras'%n)"]},{"cell_type":"markdown","metadata":{"id":"K5Ga2RGIe3d5"},"source":["9) Faça uma função que recebe uma string que representa uma cadeia de DNA e gera a cadeia complementar. A entrada e saída de dados devem ser feitas pelo programa principal.\n","\n","\n","    Entrada: AATCTGCAC\n","    Saída: TTAGACGTG"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3wGGd3ygfUB4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670217558811,"user_tz":180,"elapsed":3742,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"a509647c-d496-4c75-808a-5106f6b581df"},"outputs":[{"output_type":"stream","name":"stdout","text":["frase: TTAGACGTG\n","Cadeia complementar: ['A', 'A', 'T', 'C', 'T', 'G', 'C', 'A', 'C']\n"]}],"source":["def fita_comp(palavra):\n","  letra = palavra.upper()\n"," # print(len(palavra), letra)\n","  complemento = []\n","\n","  for i in range(len(palavra)):\n","    if letra[i] == 'A':\n","      complemento.append('T')\n","    elif letra[i] == 'T':\n","      complemento.append('A')\n","    elif letra[i] == 'G':\n","      complemento.append('C')\n","    elif letra[i] == 'C':\n","      complemento.append('G')\n","    else:\n","      print('Entrada Inválida!')\n","  return str(complemento).strip(',')\n","\n","dna = input('Cadeia: ')\n","\n","print('Cadeia complementar:', fita_comp(dna))\n"]},{"cell_type":"markdown","metadata":{"id":"rnbw1UBZe6qP"},"source":["10) Crie uma função que recebe uma frase e retorna o número de palavras que a frase contém. Considere que a palavra pode começar e/ou terminar por espaços. A entrada e saída de dados devem ser feita no programa principal."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0J5pqLDGfUkw"},"outputs":[],"source":["\n","def conta_palavras(frase):\n","  palavras = frase.split(' ')\n","  return(len(palavras))\n","\n","frase = input('Digite uma frase: ')\n","n = conta_palavras(frase)\n","print('A frase tem %d palavras'%n)"]},{"cell_type":"markdown","metadata":{"id":"3lX5CbROe8y7"},"source":["11) Faça um programa que crie um dicionário que é uma agenda e coloque nele os seguintes dados: chave (cpf), nome, idade, telefone. O programa deve ler um número indeterminado de dados, criar a agenda e imprimir todos os itens do dicionário no formato chave: nome-idade-fone."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7aUanocjfVRn"},"outputs":[],"source":["agendas = []\n","#for i in range(3):\n","while True:\n","    cpf = int(input('Digite o CPF'))\n","    if (cpf != 0):\n","        agenda = {}\n","        agenda['cpf'] = cpf\n","        agenda['nome'] = input('Digite o Nome: ')\n","        agenda['idade'] = int(input('Digite idade: '))\n","        agenda['telefone'] = int(input('Digite telefone: '))\n","        agendas.append(agenda)\n","    else:\n","        print('Até logo!')\n","        break\n","\n","print(agendas)"]},{"cell_type":"code","source":["dic_agenda = []\n","\n","while True:\n","  cpf = int(input(\"Digite o CPF: \"))\n","  if cpf != 0:\n","    agenda = {}\n","    agenda['cpf'] = cpf\n","    agenda['nome'] = input('Nome:') \n","    agenda['idade'] = int(input('Idade:'))\n","    agenda['telefone'] = int(input('Cel:'))\n","  else:\n","    print('até mais')\n","    break\n","  dic_agenda.append(agenda)\n","\n","\n","print(dic_agenda)\n","print(dic_agenda[2])\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"40Zu2NMExYuB","executionInfo":{"status":"ok","timestamp":1670218812252,"user_tz":180,"elapsed":23440,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"e095c58d-53a7-42c0-dbf5-a301722d5a86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o CPF: 1\n","Nome:1\n","Idade:1\n","Cel:1\n","Digite o CPF: 2\n","Nome:2\n","Idade:2\n","Cel:2\n","Digite o CPF: 3\n","Nome:3\n","Idade:3\n","Cel:3\n","Digite o CPF: 4\n","Nome:4\n","Idade:4\n","Cel:4\n","Digite o CPF: 0\n","até mais\n","[{'cpf': 1, 'nome': '1', 'idade': 1, 'telefone': 1}, {'cpf': 2, 'nome': '2', 'idade': 2, 'telefone': 2}, {'cpf': 3, 'nome': '3', 'idade': 3, 'telefone': 3}, {'cpf': 4, 'nome': '4', 'idade': 4, 'telefone': 4}]\n","{'cpf': 3, 'nome': '3', 'idade': 3, 'telefone': 3}\n"]},{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":150}]},{"cell_type":"markdown","metadata":{"id":"E37gHI_te-eh"},"source":["12) Faça um programa que crie um programa que cadastre informações de várias pessoas (nome, idade e cpf) e depois coloque em um dicionário. Depois remova todas as pessoas menores de 18 anos do dicionário e coloque em outro dicionário."]},{"cell_type":"code","source":[],"metadata":{"id":"GQq1UUU33Kde"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":484,"status":"ok","timestamp":1670343324239,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"},"user_tz":180},"id":"2r62J9YreMVH","outputId":"fcd52505-ca3a-48c2-a009-ce0abc2e7203"},"outputs":[{"output_type":"stream","name":"stdout","text":["({'nome': 'Talisson', 'idade': 17, 'cpf': 1}, {'nome': 'Eloia', 'idade': 20, 'cpf': 2}, {'nome': 'barbosa', 'idade': 15, 'cpf': 3})\n","cadastro ({'nome': 'Talisson', 'idade': 17, 'cpf': 1}, {'nome': 'Eloia', 'idade': 20, 'cpf': 2}, {'nome': 'barbosa', 'idade': 15, 'cpf': 3})\n","Menores [{'nome': 'Talisson', 'idade': 17, 'cpf': 1}, {'nome': 'barbosa', 'idade': 15, 'cpf': 3}]\n"]}],"source":["cadastro = []\n","nova = []\n","cad = {'nome': 'Talisson', 'idade': 17, 'cpf': 1}, {'nome': 'Eloia', 'idade': 20, 'cpf': 2}, {'nome': 'barbosa', 'idade': 15, 'cpf': 3}\n","print(cad)\n","\n","\n","#for i in range(3):\n","#  cad['nome'] = input('Nome>')\n","#  cad['idade'] = int(input('Idade:'))\n","#  cad['cpf'] = int(input('CPF:'))\n","#  cadastro.append(cad)\n","\n","for i in range (3):\n","  if cad[i]['idade'] < 18:\n","    nova.append(cad[i])\n","    #del cad[i]['idade']\n","  cadastro.append(cad)\n","\n","print('cadastro',cad)\n","print('Menores',nova)"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPgNR35IoAUASRe/Jlqr9UM"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOPqA3yVxoEzOD7ktFFCaU0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["1) Faça um Programa que leia 20 números inteiros e armazene-os em uma lista Armazene os números POSITIVOS na lista positivos e os números NEGATIVOS na lista negativos. Imprima as três listas.\n"],"metadata":{"id":"ZacFXIFp7efu"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FY_wRjxx7UF_","executionInfo":{"status":"ok","timestamp":1667448537124,"user_tz":180,"elapsed":6938,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"325d53d1-6ffb-4be0-eba0-fb7522f26118"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o 0º termo: 1\n","Digite o 1º termo: -3\n","Digite o 2º termo: 2\n","Lista [1, -3, 2]\n","Positivos [1, 2]\n","Negativo [-3]\n"]}],"source":["lista = []\n","positivo = []\n","negativo = []\n","\n","for n in range(0,20):\n","  lista.append(int(input(f'Digite o {n}º termo: ')))\n","  if (lista[n] > 0):\n","    positivo.append(lista[n])\n","  elif(lista[n] < 0):\n","    negativo.append(lista[n])\n","\n","print('Lista',lista)\n","print('Positivos',positivo)\n","print('Negativo',negativo)"]},{"cell_type":"markdown","source":["2) Faça um Programa que leia um vetor A com 10 números inteiros, calcule e mostre a soma dos quadrados dos elementos do vetor.\n","\n","> Bloco com recuo\n","\n"],"metadata":{"id":"5gEelGnl8Bek"}},{"cell_type":"code","source":["A = []\n","A2 = []\n","soma = 0\n","for n in range(0,10):\n","  A.append(int(input(f'Digite o {n+1}º termo:')))\n","  soma = soma + A[n]**2 \n","  A2.append(A[n]**2)\n","print(f'Lista = {A}')\n","print(f'Lista² = {A2}')\n","print(f'Soma dos quadrados = {soma}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EnSiLIEH-AUS","executionInfo":{"status":"ok","timestamp":1667449323127,"user_tz":180,"elapsed":9654,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"a1cce2c2-2f71-4a52-e56d-1e93df90d96f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o 1º termo:1\n","Digite o 2º termo:2\n","Digite o 3º termo:3\n","Digite o 4º termo:4\n","Digite o 5º termo:5\n","Digite o 6º termo:6\n","Digite o 7º termo:7\n","Digite o 8º termo:8\n","Digite o 9º termo:9\n","Digite o 10º termo:10\n","Lista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","Lista² = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n","Soma dos quadrados = 385\n"]}]},{"cell_type":"markdown","source":["3) Utilizando listas refaça o programa que faz 5 perguntas para uma pessoa sobre um crime. As perguntas são:\n"," \n","    1 - \"Telefonou para a vítima?\"\n","    2 - \"Esteve no local do crime?\"\n","    3 - \"Mora perto da vítima?\"\n","    4 - \"Devia para a vítima?\"\n","    5 - \"Já trabalhou com a vítima?\"\n","\n","O programa deve no final emitir uma classificação sobre a participação da pessoa no crime. Se a pessoa responder positivamente a 2 questões ela deve ser classificada como \"Suspeita\", entre 3 e 4 como \"Cúmplice\" e 5 como \"Assassino\". Caso contrário, ele será classificado como \"Inocente\".\n"],"metadata":{"id":"E_mfUdDg8G2_"}},{"cell_type":"code","source":["respostas = []\n","perguntas = [\"1 - Telefonou para a vítima?\", \"2 - Esteve no local do crime?\", \"3 - Mora perto da vítima?\", \"4 - Devia para a vítima?\", \"5 - Já trabalhou com a vítima?\"]\n","soma = 0\n","print('Responda [1] Sim    [0] Não')\n","for n in range(0,5):\n","  print(perguntas[n])\n","  respostas.append(int(input(f'Resposta {n+1}:')))\n","  soma = soma + respostas[n]\n","\n","if(soma == 2):\n","  print('Suspeito!')\n","elif(soma > 2 and soma < 5):\n","  print('Cúmplice!')\n","elif(soma == 5):\n","  print('Assassino!')\n","else:\n","  print('Inocente!')\n","\n","print(f'\\n\\nRespostas = {respostas}')\n","print(f'Soma = {soma}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":433},"id":"QAzZ1lc_-BFf","executionInfo":{"status":"error","timestamp":1667451066570,"user_tz":180,"elapsed":40886,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"d45ce286-3c07-4fd4-8bcf-67f94617567d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Responda [1] Sim    [0] Não\n","1 - Telefonou para a vítima?\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-118-ccfe81fe84b7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mn\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mperguntas\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m   \u001b[0mrespostas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'Resposta {n+1}:'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m   \u001b[0msoma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msoma\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mrespostas\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    861\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    862\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 863\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    864\u001b[0m         )\n\u001b[1;32m    865\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    902\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    903\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 904\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    905\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    906\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["4) Faça um programa usando listas que recebe a nota dos alunos de uma turma e calcula a média aritmética da turma não tendo como préconhecimento da quantidade de alunos da turma.\n","\n","    Entrada: O usuário deve digitar como entrada a nota de cada aluno (nota>=0)\n","    Saída: O algoritmo deve imprimir a média da turma\n","O valor da média deve ter duas casas decimais, use a formatação com o\n","caractere %\n"],"metadata":{"id":"flU3MdrC8zQf"}},{"cell_type":"code","source":["notas = []\n","sair = 0\n","i = soma = 0\n","while sair == 0:\n","  for n in range(0,5):\n","    notas.append(float(input(f'Digite a {n+1}º média:')))\n","    soma = soma + notas[n]\n","  sair = input(\"deseja sair:\")\n","media = soma/n\n","print('A média da turma é %.2f'% media)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"thIjDJQ5-CiD","executionInfo":{"status":"ok","timestamp":1667451994046,"user_tz":180,"elapsed":13819,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"26fd85b2-79ae-406f-f59b-8f7deb055b69"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a 1º média:1\n","Digite a 2º média:2\n","Digite a 3º média:3\n","Digite a 4º média:4\n","Digite a 5º média:5\n","deseja sair:0\n","A média da turma é 3.75\n"]}]},{"cell_type":"markdown","source":["5) Faça um Programa que leia um vetor de 10 caracteres, e diga quantas consoantes foram lidas. Imprima as consoantes.\n"],"metadata":{"id":"-a1wvlmt9ESV"}},{"cell_type":"code","source":["consoante = ('b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','w','v','x','y','z')\n","#vetor = ['a','b','c','d','e', 'f', 'g', 'h','i','j']\n","vetor = []\n","cont = 0\n","soma = 0\n","for i in range(0,10):\n","  vetor.append(input('Insira os valores do vetor: '))\n","\n","for sim in consoante:\n","  cont = cont + 1\n","  for vr in vetor:\n","    cont = cont + 1\n","    if(sim.upper() == vr.upper()):\n","        print(f'Consoante: {vr}')\n","        soma = soma + 1\n","print(f'Temos {soma} consoantes')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u2uSB5qcdwVx","executionInfo":{"status":"ok","timestamp":1667513741320,"user_tz":180,"elapsed":10969,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"1cb13351-b200-4bd1-dd0d-36bb3013125b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Insira os valores do vetor: a\n","Temos 0 consoantes\n"]}]},{"cell_type":"markdown","source":["\n","\\6) Faça um programa que preencha um vetor com nove números inteiros, calcule e mostre os números primos e suas respectivas posições.\n","\n","    #Dica:\n","    -Usar um laço para preencher o vetor com os números digitados pelo usuário\n","    -Usar outro laço para percorrer o vetor e para cada elemento do vetor verificar se o número é primo e se sim, mostrar o elemento e a posição dele no vetor\n","\n"],"metadata":{"id":"hK5qKUNa9Fv-"}},{"cell_type":"code","source":["vetor = [5,5,3,2,5,4,7,8,8,10]\n","\n","for lista in range(1,10):\n","  if(vetor[lista]%lista == 0):\n","    print(f'{vetor[lista]} é multiplo de {lista}')\n","    cont = cont + 1\n","  elif(cont == 0):\n","    print('é primo')"],"metadata":{"id":"Eq8LQxQN-Dd5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667515200492,"user_tz":180,"elapsed":361,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"51f27332-de2f-48e9-fdd0-7fbdfd09ef16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5 é multiplo de 1\n","8 é multiplo de 8\n"]}]},{"cell_type":"markdown","source":["7) Em uma competição de salto em distância cada atleta tem direito a cinco saltos. O resultado do atleta será determinado pela média dos cinco valores restantes. Você deve fazer um programa que receba o nome e as cinco distâncias alcançadas pelo atleta em seus saltos e depois informe o nome, os saltos e a média dos saltos. O programa deve ser encerrado quando não for informado o nome do atleta. A saída do programa deve ser conforme o exemplo abaixo:\n","\n","        Atleta: Rodrigo Curvêllo\n","        Primeiro Salto: 6.5 m\n","        Segundo Salto: 6.1 m\n","        Terceiro Salto: 6.2 m\n","        Quarto Salto: 5.4 m\n","        Quinto Salto: 5.3 m\n","        Resultado final:\n","        Atleta: Rodrigo Curvêllo\n","        Saltos: 6.5 - 6.1 - 6.2 - 5.4 - 5.3\n","        Média dos saltos: 5.9 m\n","\n"],"metadata":{"id":"a2K9dxC89Yhh"}},{"cell_type":"code","source":["nome = input('Nome do atleta: ')\n","ordem = ['primeiro','segundo','terceiro','quarto','quinto']\n","saltos = []\n","soma = 0\n","for ns in range(1,6):\n","  saltos.append(float(input(f'Salto {ns}:')))\n","\n","soma = sum(saltos)/len(saltos)\n","print('\\n\\n')\n","print('#'*10, 'resultado final','#'*10)\n","print(f\"Atleta:{nome}\")\n","for i in range(0,5):\n","    print('%s Salto %.2f m'%(ordem[i], saltos[i]))\n","print(f'Saltos:{saltos}m')\n","print(f'Média dos saltos: {soma}')\n"],"metadata":{"id":"fCMX1ZnT-Fc3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["8) Faça um programa que leia um número indeterminado de valores, correspondentes a notas, encerrando a entrada de dados quando for informado um valor igual a -1 (que não deve ser armazenado). Após esta entrada de dados, faça:\n","\n","    a) Mostre a quantidade de valores que foram lidos;\n","    b) Exiba todos os valores na ordem em que foram informados, um ao lado do outro;\n","    c) Exiba todos os valores na ordem inversa à que foram informados, um abaixo do outro;\n","    d) Calcule e mostre a soma dos valores;\n","    e) Calcule e mostre a média dos valores;\n","    f) Calcule e mostre a quantidade de valores acima da média calculada;\n"],"metadata":{"id":"LK9HKdqw9ooN"}},{"cell_type":"code","source":["valor = []\n","while valor[''] != -1:\n","  for cont in range(0,4):\n","    verificador = input('Digite o número:')\n","    if (valor != -1):\n","      valor.append(verificador)\n","    elif(valor == -1):\n","      valor.remove(-1)\n","      break1\n","print(valor)"],"metadata":{"id":"wB8z095k-G7f","colab":{"base_uri":"https://localhost:8080/","height":236},"executionInfo":{"status":"error","timestamp":1667532477834,"user_tz":180,"elapsed":409,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"83226fc1-2952-4ce0-cff7-a7faf4c39105"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-b294522d8976>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mvalor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mwhile\u001b[0m \u001b[0mvalor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m   \u001b[0;32mfor\u001b[0m \u001b[0mcont\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mverificador\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Digite o número:'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mvalor\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: list indices must be integers or slices, not str"]}]},{"cell_type":"markdown","source":["9) Faça um programa que receba as notas de 20 alunos e armazena-as em uma lista, após isso o seu programa deve:\n","\n","    a) Ordenar a lista de notas em ordem crescente e imprimi-la\n","    b) Ordenar a lista de notas em ordem crescente e imprimi-la\n","\n","Obs. (Fazer a ordenação das listas sem usar o sort, sorted ou métodos de\n","ordenação)"],"metadata":{"id":"BY27_mTR96BW"}},{"cell_type":"code","source":["lista = [1,2,3,4]\n","lista.insert(2,12)\n","print(lista)\n","\n","lista.remove(2)\n","print(lista)\n","\n","lista.pop()\n","print(lista)\n","\n","lista.pop(1)\n","print(lista)\n","\n","lista.append(18)\n","print(lista)\n","\n","print(lista.count(1))\n","\n","print(lista.index(3))\n","print(lista)\n","\n","lista.reverse()\n","print(lista,'TT')\n","\n","copia = lista.copy()\n","print(copia,'copia')\n","copia.reverse()\n","print(copia,'reverse copy')\n","copia.append(21)\n","copia.reverse()\n","print(copia)\n","\n","lista.sort()\n","print(lista,'sort')\n","\n","lista.sort(reverse = True)\n","print(lista,'reverse')\n","\n","list3 = sorted(lista, reverse = True)\n","print(list3,'sorted')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BGUoQVKrrw8y","executionInfo":{"status":"ok","timestamp":1669630650348,"user_tz":180,"elapsed":274,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"c38ff8d1-7669-4c4b-d5a0-cc619be6258b"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 12, 3, 4]\n","[1, 12, 3, 4]\n","[1, 12, 3]\n","[1, 3]\n","[1, 3, 18]\n","1\n","1\n","[1, 3, 18]\n","[18, 3, 1] TT\n","[18, 3, 1] copia\n","[1, 3, 18] reverse copy\n","[21, 18, 3, 1]\n","[1, 3, 18] sort\n","[18, 3, 1] reverse\n","[18, 3, 1] sorted\n"]}]},{"cell_type":"code","source":["frase = 'Talisson eLOIA'\n","\n","maiusculo = frase.upper()\n","print(maiusculo.startswith('TA'))\n","print(maiusculo)\n","minusculo = frase.lower()\n","print(minusculo)\n","print(minusculo.endswith('ia'))\n","print('%s\\n%s\\n%s'%(frase, maiusculo,minusculo))\n","\n","print('ia' in minusculo)\n","print('barbisa' not in minusculo)\n","\n","print(minusculo.count('a'))\n","print(minusculo.find('el',5,11))\n","print(minusculo.rfind('el',5,8))\n","\n","nova = maiusculo.strip('IA')\n","print(nova)\n","\n","print(maiusculo.split(' '))\n","\n","print(maiusculo.replace('TALISSON','NAGÃO'))\n","\n","print(maiusculo.split())\n","\n","print(set(maiusculo))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0XE8DCthviGF","executionInfo":{"status":"ok","timestamp":1669631738540,"user_tz":180,"elapsed":277,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"a3a50988-08a0-4fe4-ed67-a611a2796256"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","TALISSON ELOIA\n","talisson eloia\n","True\n","Talisson eLOIA\n","TALISSON ELOIA\n","talisson eloia\n","True\n","True\n","2\n","9\n","-1\n","TALISSON ELO\n","['TALISSON', 'ELOIA']\n","NAGÃO ELOIA\n","['TALISSON', 'ELOIA']\n","{'S', 'N', 'T', 'L', ' ', 'A', 'E', 'I', 'O'}\n"]}]},{"cell_type":"code","source":["print('#'*10,'METODOS LISTA 1','#'*10)\n","print('LISTA 1',lista,'\\n')\n","\n","lista = [333,2,3,4,5]\n","print('len -',len(lista))\n","\n","lista.append(69)\n","print('append -',lista)\n","\n","lista.insert(2,333)\n","print('insert -',lista)\n","\n","lista.remove(5)\n","print('remove -', lista)\n","\n","lista.pop()\n","print('pop -',lista)\n","\n","lista.pop(3)\n","print('pop(i) -',lista)\n","\n","print('count -', lista.count(333))\n","\n","print('index -',lista.index(4))\n","\n","lista.reverse()\n","print('reverse -', lista,'\\n')\n","\n","print('#'*10,'METODOS LISTA 2','#'*10,)\n","\n","lista2 = [3,7,4,90,12,11,5]\n","print('lista 2 - ',lista2,'\\n')\n","print('fatiamento [i:f] -',lista2[1:4])\n","\n","copia = lista2.copy()\n","print('copia_1 -',copia)\n","\n","copia_2 = list(lista2)\n","print('copia_2 -',copia_2)\n","\n","copia_3 = copia[:]\n","print('copia_3 -',copia_2)\n","\n","copia.sort()\n","print('sort - ', copia)\n","\n","ls_ord = sorted(copia)\n","print('sorted -', ls_ord)\n","\n","copia.sort(reverse =True)\n","print('reverse -', copia)\n","\n","ls_dec = sorted(copia, reverse = True)\n","print('sorted reverse -',ls_dec,'\\n')\n","\n","print('#'*10,'ENUMERATE','#'*10)\n","\n","\n","for pos, elemento in enumerate(copia):\n","  print('O elemento %d está na posição %d ' %(elemento, pos))\n","\n"],"metadata":{"id":"qxWstMPT8Swp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669583124868,"user_tz":180,"elapsed":306,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"8bfe0f63-fdf7-4e41-9d11-3fc647121331"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["########## METODOS LISTA 1 ##########\n","LISTA 1 [4, 333, 2, 333] \n","\n","len - 5\n","append - [333, 2, 3, 4, 5, 69]\n","insert - [333, 2, 333, 3, 4, 5, 69]\n","remove - [333, 2, 333, 3, 4, 69]\n","pop - [333, 2, 333, 3, 4]\n","pop(i) - [333, 2, 333, 4]\n","count - 2\n","index - 3\n","reverse - [4, 333, 2, 333] \n","\n","########## METODOS LISTA 2 ##########\n","lista 2 -  [3, 7, 4, 90, 12, 11, 5] \n","\n","fatiamento [i:f] - [7, 4, 90]\n","copia_1 - [3, 7, 4, 90, 12, 11, 5]\n","copia_2 - [3, 7, 4, 90, 12, 11, 5]\n","copia_3 - [3, 7, 4, 90, 12, 11, 5]\n","sort -  [3, 4, 5, 7, 11, 12, 90]\n","sorted - [3, 4, 5, 7, 11, 12, 90]\n","reverse - [90, 12, 11, 7, 5, 4, 3]\n","sorted reverse - [90, 12, 11, 7, 5, 4, 3] \n","\n","########## ENUMERATE ##########\n","O elemento 90 está na posição 0 \n","O elemento 12 está na posição 1 \n","O elemento 11 está na posição 2 \n","O elemento 7 está na posição 3 \n","O elemento 5 está na posição 4 \n","O elemento 4 está na posição 5 \n","O elemento 3 está na posição 6 \n"]}]},{"cell_type":"code","source":["print('\\n','#'*10,'STRING','#'*10)\n","\n","idade = 21\n","print('%d' %idade)\n","print('%4d' %idade)\n","print('%04d' %idade)\n","print('%-2d' %idade)\n","print('\\n')\n","\n","print('#'*10,'NUMEROS REAIS','#'*10)\n","\n","numero = 2/3\n","print('%f'%numero)\n","print('%.2f'%numero)\n","print('%5.2f'%numero)\n","print('%2.2f'%numero)\n","print('%10.04f'%numero)\n","print('\\n')\n","\n","print('#'*10,'FATIAMENTO','#'*10)\n","nome = 'TALISSON ELOIA'\n","print(nome[0:8])\n","print(nome[-5:])\n","print('\\n')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MSZEw-fvtHu4","executionInfo":{"status":"ok","timestamp":1669581876676,"user_tz":180,"elapsed":272,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"0c8de4dd-e6d2-4277-8f7e-e84fa3a24747"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," ########## STRING ##########\n","21\n","  21\n","0021\n","21\n","\n","\n","########## NUMEROS REAIS ##########\n","0.666667\n","0.67\n"," 0.67\n","0.67\n","    0.6667\n","\n","\n","########## FATIAMENTO ##########\n","TALISSON\n","ELOIA\n","\n","\n","########## METODOS PARA STRINGS ##########\n"]}]},{"cell_type":"code","source":["print('#'*10,'METODOS PARA STRINGS CURSO','#'*10)\n","\n","curso = 'Ciências da Computação'\n","print('startswith - verifica se a string inicia com os caracters indicados')\n","print(curso.startswith('Ci'))\n","print(curso.startswith('ci'))\n","print(curso.startswith('Cie'))\n","\n","print('\\nendswith - verifica se a frase termina com os caracteres indicados')\n","print(curso.endswith('ção'))\n","print(curso.endswith('çao'))\n","\n","turma = 'EngenhariA'\n","print('#'*10,'METODOS PARA STRINGS TURMA','#'*10)\n","\n","print('\\nupper e lower - deixa tudo maiusculo e minuscul')\n","maiusculo = turma.upper()\n","print(maiusculo)\n","print(maiusculo.lower())\n","\n","print('#'*10,'METODOS PARA STRINGS FRASE 2','#'*10)\n","\n","frase = \"Um homem, umas maquina, uma besta enjauladaa com ódio. Um homem de bem. Um homem mulher\"\n","print('\\nin & not in - busca se o elemento esta contido ou não na string')\n","print('fup' in frase)\n","print('hom' in frase)\n","print('máquina' in frase)\n","print('ódio' not in frase)\n","\n","print('\\nupper, lower, in, not in')\n","print('um' in frase.lower())\n","\n","print('\\ncount - conta quanta vezes o elemento se repete na string')\n","print(frase.count('a'))\n","print(frase.count(' '))\n","\n","\n","frase2 = 'O sabiá não sabia que o sábio sabia que o sabiá não sabia assobiar.'\n","print('\\nfind - Procura a palavra dentro do intervalo (nome, inicio, fim')\n","print(frase2.find('sabia'))\n","print(frase2.find('sabia',13))\n","print(frase2.find('sabia',13,30))\n","print(frase2.find('sabia',13,35))\n","\n","print('\\nrfind - Procura a palavra dentro do intervalo de tras pra frente (nome, inicio, fim')\n","print(frase2.rfind('sabia'))\n","print(frase2.rfind('sabia',13))\n","print(frase2.rfind('sabia',13,30))\n","print(frase2.rfind('sabia',13,35))\n","print(frase2[::-1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qy2Uipm1B5Wy","executionInfo":{"status":"ok","timestamp":1669631816309,"user_tz":180,"elapsed":266,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"c0e6b332-b595-413a-b259-a447e7e55a9c"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["########## METODOS PARA STRINGS CURSO ##########\n","startswith - verifica se a string inicia com os caracters indicados\n","True\n","False\n","False\n","\n","endswith - verifica se a frase termina com os caracteres indicados\n","True\n","False\n","########## METODOS PARA STRINGS TURMA ##########\n","\n","upper e lower - deixa tudo maiusculo e minuscul\n","ENGENHARIA\n","engenharia\n","########## METODOS PARA STRINGS FRASE 2 ##########\n","\n","in & not in - busca se o elemento esta contido ou não na string\n","False\n","True\n","False\n","False\n","\n","upper, lower, in, not in\n","True\n","\n","count - conta quanta vezes o elemento se repete na string\n","9\n","15\n","\n","find - Procura a palavra dentro do intervalo (nome, inicio, fim\n","12\n","30\n","-1\n","30\n","\n","rfind - Procura a palavra dentro do intervalo de tras pra frente (nome, inicio, fim\n","52\n","52\n","-1\n","30\n",".raibossa aibas oãn áibas o euq aibas oibás o euq aibas oãn áibas O\n"]}]},{"cell_type":"code","source":["#Uso do strip\n","frase = 'amanhã é sexta!'\n","frase2 = frase.strip()\n","print(frase2)\n","print(frase.strip('!'))\n","\n","nome = 'Talisson Eloia Barbosa'\n","nome2 = nome.strip()\n","print(nome2)\n","print(nome2.strip('E'))\n","\n","#uso do split\n","curso = 'Engeharia de Prodição'\n","print(curso.split())\n","frase =  '1,2,3,4,5,6,7,8'\n","print(frase.split(','))\n","print(len(frase))\n","\n","#uso replace\n","piada = '11 homens e um segredo'\n","print(piada.replace('segredo','cu'))\n","print(nome.replace('Talisson','Negão'))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bTfBfpM9mkOh","executionInfo":{"status":"ok","timestamp":1669596340872,"user_tz":180,"elapsed":474,"user":{"displayName":"Talisson Eloia","userId":"07150325006318020152"}},"outputId":"89c4082a-88f6-4b64-838e-68167100d939"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["amanhã é sexta!\n","amanhã é sexta\n","Talisson Eloia Barbosa\n","Talisson Eloia Barbosa\n","['Engeharia', 'de', 'Prodição']\n","['1', '2', '3', '4', '5', '6', '7', '8']\n","15\n","11 homens e um cu\n","Negão Eloia Barbosa\n"]}]},{"cell_type":"code","source":["frase = 'amo o mar'\n","lista = []*50\n","num = len(frase)\n","print(num)\n","for i in range(0,num):\n","  if(frase[i] != frase[i+1]):\n"," #   aux = frase[i+1]\n","    lista[i].append(str(frase[i])\n","\n","print(lista)"],"metadata":{"id":"t313vYxnaAfd"},"execution_count":null,"outputs":[]}]}